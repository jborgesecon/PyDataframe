IMPORTING

    - Database Connection
    - CSV
    - XLSX
    - Parquet

EXPLORATORY ANALYSIS

    - df.head(n)
    - df.tail(n)
    - df.to_string()
    - df.describe()
    - df.value_counts()

    - df.dtypes()
    - df.isna()
    - df.isna().sum() # Check percentages as well
    - df.info()

APPLY CORRECTIONS

    - proper type
    - convert to null (case when -1 then 'null')
    - coalesce (if null then 'not provided')
    - text to date ->  pd.to_datetime(data_admissao, format='%Y-%m-%d', errors='coerce')
    - text to int/ float -> pd.to_numeric(df['field'])
    - text to boolean (1 = TRUE; 0 = FALSE)
        -> df['urgent'] = df['urgent'].apply(lambda x: True if x == 'yes' else False if x == 'no' else None)
    - remove characters (substitute(column 1["$", ""]))
        -> df['salary'] = df['salary'].str.replace('[$]', '', regex=True)
    - separate (sep(column2) on '/')
    - unite for index (index = concatenate(column1; month(column2), left(column3,2)))

MANIPULATION

    - column to rows
        -> df.melt(id_vars=tuple(), var_name='variable', value_name='value')
    - fill downwards -> df.fillna(method='ffill')
    - drop column

CALCULATION

    - extract year, month, day from date
    - calculate time difference
    - calculate spread 

print(df.info())

code_id = code_id::integer
price = price::float
sell_date = pd.to_datetime(sell_date, format'%Y-%m-%d')
urgent = 
    case
        when 'yes' then TRUE
        when 'no' then FALSO
        else 'null'
    end as boolean